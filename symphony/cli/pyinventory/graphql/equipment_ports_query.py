#!/usr/bin/env python3
# @generated AUTOGENERATED file. Do not Change!

from dataclasses import dataclass
from datetime import datetime
from gql.gql.datetime_utils import DATETIME_FIELD
from gql.gql.graphql_client import GraphqlClient
from functools import partial
from numbers import Number
from typing import Any, Callable, List, Mapping, Optional

from dataclasses_json import DataClassJsonMixin


@dataclass
class EquipmentPortsQuery(DataClassJsonMixin):
    __QUERY__: str = """
    query EquipmentPortsQuery($id: ID!) {
  equipment: node(id: $id) {
    ... on Equipment {
      ports {
        id
        definition {
          id
          name
        }
        link {
          id
        }
      }
    }
  }
}

    """

    @dataclass
    class EquipmentPortsQueryData(DataClassJsonMixin):
        @dataclass
        class Node(DataClassJsonMixin):
            @dataclass
            class EquipmentPort(DataClassJsonMixin):
                @dataclass
                class EquipmentPortDefinition(DataClassJsonMixin):
                    id: str
                    name: str

                @dataclass
                class Link(DataClassJsonMixin):
                    id: str

                id: str
                definition: EquipmentPortDefinition
                link: Optional[Link] = None

            ports: List[EquipmentPort]

        equipment: Optional[Node] = None

    data: Optional[EquipmentPortsQueryData] = None

    @classmethod
    # fmt: off
    def execute(cls, client: GraphqlClient, id: str):
        # fmt: off
        variables = {"id": id}
        response_text = client.call(cls.__QUERY__, variables=variables)
        return cls.from_json(response_text).data
