#!/usr/bin/env python3
# @generated AUTOGENERATED file. Do not Change!

from dataclasses import dataclass
from datetime import datetime
from gql.gql.datetime_utils import DATETIME_FIELD
from gql.gql.graphql_client import GraphqlClient
from functools import partial
from numbers import Number
from typing import Any, Callable, List, Mapping, Optional

from dataclasses_json import dataclass_json


@dataclass_json
@dataclass
class EquipmentTypeEquipmentQuery:
    __QUERY__ = """
    query EquipmentTypeEquipmentQuery($id: ID!) {
  equipmentType: node(id: $id) {
    ... on EquipmentType {
      equipments {
        id
        name
      }
    }
  }
}

    """

    @dataclass_json
    @dataclass
    class EquipmentTypeEquipmentQueryData:
        @dataclass_json
        @dataclass
        class Node:
            @dataclass_json
            @dataclass
            class Equipment:
                id: str
                name: str

            equipments: List[Equipment]

        equipmentType: Optional[Node] = None

    data: Optional[EquipmentTypeEquipmentQueryData] = None
    errors: Optional[Any] = None

    @classmethod
    # fmt: off
    def execute(cls, client: GraphqlClient, id: str):
        # fmt: off
        variables = {"id": id}
        response_text = client.call(cls.__QUERY__, variables=variables)
        return cls.from_json(response_text).data
