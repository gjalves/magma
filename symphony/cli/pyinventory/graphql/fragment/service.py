#!/usr/bin/env python3
# @generated AUTOGENERATED file. Do not Change!

from dataclasses import dataclass
from datetime import datetime
from gql.gql.datetime_utils import DATETIME_FIELD
from gql.gql.graphql_client import GraphqlClient
from gql.gql.client import OperationException
from gql.gql.reporter import FailedOperationException
from functools import partial
from numbers import Number
from typing import Any, Callable, List, Mapping, Optional
from time import perf_counter
from dataclasses_json import DataClassJsonMixin

from ..fragment.customer import CustomerFragment, QUERY as CustomerFragmentQuery
from ..fragment.link import LinkFragment, QUERY as LinkFragmentQuery
from ..fragment.service_endpoint import ServiceEndpointFragment, QUERY as ServiceEndpointFragmentQuery
QUERY: List[str] = CustomerFragmentQuery + LinkFragmentQuery + ServiceEndpointFragmentQuery + ["""
fragment ServiceFragment on Service {
  id
  name
  externalId
  customer {
    ...CustomerFragment
  }
  endpoints {
    ...ServiceEndpointFragment
  }
  links {
    ...LinkFragment
  }
}

"""]

@dataclass
class ServiceFragment(DataClassJsonMixin):
    @dataclass
    class Customer(CustomerFragment):
        pass

    @dataclass
    class ServiceEndpoint(ServiceEndpointFragment):
        pass

    @dataclass
    class Link(LinkFragment):
        pass

    id: str
    name: str
    endpoints: List[ServiceEndpoint]
    links: List[Link]
    externalId: Optional[str]
    customer: Optional[Customer]
