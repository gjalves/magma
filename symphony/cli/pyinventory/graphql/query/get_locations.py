#!/usr/bin/env python3
# @generated AUTOGENERATED file. Do not Change!

from dataclasses import dataclass
from datetime import datetime
from gql.gql.datetime_utils import DATETIME_FIELD
from gql.gql.graphql_client import GraphqlClient
from gql.gql.client import OperationException
from gql.gql.reporter import FailedOperationException
from functools import partial
from numbers import Number
from typing import Any, Callable, List, Mapping, Optional
from time import perf_counter
from dataclasses_json import DataClassJsonMixin

from ..fragment.location import LocationFragment, QUERY as LocationFragmentQuery

QUERY: List[str] = LocationFragmentQuery + ["""
query GetLocationsQuery {
  locations {
    edges {
      node {
        ...LocationFragment
      }
    }
  }
}

"""]

@dataclass
class GetLocationsQuery(DataClassJsonMixin):
    @dataclass
    class GetLocationsQueryData(DataClassJsonMixin):
        @dataclass
        class LocationConnection(DataClassJsonMixin):
            @dataclass
            class LocationEdge(DataClassJsonMixin):
                @dataclass
                class Location(LocationFragment):
                    pass

                node: Optional[Location]

            edges: List[LocationEdge]

        locations: Optional[LocationConnection]

    data: GetLocationsQueryData

    @classmethod
    # fmt: off
    def execute(cls, client: GraphqlClient) -> Optional[GetLocationsQueryData.LocationConnection]:
        # fmt: off
        variables = {}
        try:
            start_time = perf_counter()
            response_text = client.call(''.join(set(QUERY)), variables=variables)
            res = cls.from_json(response_text).data
            elapsed_time = perf_counter() - start_time
            client.reporter.log_successful_operation("GetLocationsQuery", variables, elapsed_time)
            return res.locations
        except OperationException as e:
            raise FailedOperationException(
                client.reporter,
                e.err_msg,
                e.err_id,
                "GetLocationsQuery",
                variables,
            )
