#!/usr/bin/env python3
# @generated AUTOGENERATED file. Do not Change!

from dataclasses import dataclass
from datetime import datetime
from gql.gql.datetime_utils import DATETIME_FIELD
from gql.gql.graphql_client import GraphqlClient
from functools import partial
from numbers import Number
from typing import Any, Callable, List, Mapping, Optional

from dataclasses_json import dataclass_json

from gql.gql.enum_utils import enum_field
from .service_endpoint_role_enum import ServiceEndpointRole

from .service_create_data_input import ServiceCreateData


@dataclass_json
@dataclass
class AddServiceMutation:
    __QUERY__ = """
    mutation AddServiceMutation($data: ServiceCreateData!) {
  addService(data: $data) {
    id
    name
    externalId
    customer {
      id
      name
      externalId
    }
    endpoints {
      id
      port {
        id
      }
      role
    }
    links {
      id
    }
  }
}

    """

    @dataclass_json
    @dataclass
    class AddServiceMutationData:
        @dataclass_json
        @dataclass
        class Service:
            @dataclass_json
            @dataclass
            class Customer:
                id: str
                name: str
                externalId: Optional[str] = None

            @dataclass_json
            @dataclass
            class ServiceEndpoint:
                @dataclass_json
                @dataclass
                class EquipmentPort:
                    id: str

                id: str
                port: EquipmentPort
                role: ServiceEndpointRole = enum_field(ServiceEndpointRole)

            @dataclass_json
            @dataclass
            class Link:
                id: str

            id: str
            name: str
            endpoints: List[ServiceEndpoint]
            links: List[Link]
            externalId: Optional[str] = None
            customer: Optional[Customer] = None

        addService: Optional[Service] = None

    data: Optional[AddServiceMutationData] = None
    errors: Optional[Any] = None

    @classmethod
    # fmt: off
    def execute(cls, client: GraphqlClient, data: ServiceCreateData):
        # fmt: off
        variables = {"data": data}
        response_text = client.call(cls.__QUERY__, variables=variables)
        return cls.from_json(response_text).data
